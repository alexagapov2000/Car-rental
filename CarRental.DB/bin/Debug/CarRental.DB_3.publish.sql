/*
Deployment script for CarRental

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CarRental"
:setvar DefaultFilePrefix "CarRental"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS01\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS01\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key d46141de-dd84-4079-901e-6a6e41120a0f is skipped, element [dbo].[FK_RentCompanyServices_ToTable] (SqlForeignKeyConstraint) will not be renamed to [FK_RentCompanyServices_RentCompanies]';


GO
PRINT N'Starting rebuilding table [dbo].[RentCompanyServices]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RentCompanyServices] (
    [RentCompanyId] INT NOT NULL,
    [ServiceId]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ServiceId] ASC, [RentCompanyId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RentCompanyServices])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_RentCompanyServices] ([ServiceId], [RentCompanyId])
        SELECT   [ServiceId],
                 [RentCompanyId]
        FROM     [dbo].[RentCompanyServices]
        ORDER BY [ServiceId] ASC, [RentCompanyId] ASC;
    END

DROP TABLE [dbo].[RentCompanyServices];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RentCompanyServices]', N'RentCompanyServices';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_RentCompanyServices_Services]...';


GO
ALTER TABLE [dbo].[RentCompanyServices] WITH NOCHECK
    ADD CONSTRAINT [FK_RentCompanyServices_Services] FOREIGN KEY ([ServiceId]) REFERENCES [dbo].[Services] ([Id]);


GO
PRINT N'Creating [dbo].[FK_RentCompanyServices_RentCompanies]...';


GO
ALTER TABLE [dbo].[RentCompanyServices] WITH NOCHECK
    ADD CONSTRAINT [FK_RentCompanyServices_RentCompanies] FOREIGN KEY ([RentCompanyId]) REFERENCES [dbo].[RentCompanies] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd46141de-dd84-4079-901e-6a6e41120a0f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d46141de-dd84-4079-901e-6a6e41120a0f')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[RentCompanyServices] WITH CHECK CHECK CONSTRAINT [FK_RentCompanyServices_Services];

ALTER TABLE [dbo].[RentCompanyServices] WITH CHECK CHECK CONSTRAINT [FK_RentCompanyServices_RentCompanies];


GO
PRINT N'Update complete.';


GO
